{"def":{"word":"def","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"#define","user_data":"{\"snippet_trigger\":\"def\",\"snippet\":\"#define\"}","description":"#define","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":30,"menu_template":"","real_name":"def","action__pattern":"^snippet\\s\\+def$","menu_abbr":""},"fun":{"word":"fun","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"${1:void} ${2:function_name}(${3})\n\t{\n\t\t${4}\n\t}","user_data":"{\"snippet_trigger\":\"fun\",\"snippet\":\"${1:void} ${2:function_name}(${3})\\n\\t{\\n\\t\\t${4}\\n\\t}\"}","description":"${1:void} ${2:function_name}(${3})\n\t{\n\t\t${4}\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":139,"menu_template":"","real_name":"fun","action__pattern":"^snippet\\s\\+fun$","menu_abbr":""},"forr":{"word":"forr","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"for (int ${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++}) {\n\t\t${5}\n\t}","user_data":"{\"snippet_trigger\":\"forr\",\"snippet\":\"for (int ${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++}) {\\n\\t\\t${5}\\n\\t}\"}","description":"for (int ${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++}) {\n\t\t${5}\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":122,"menu_template":"","real_name":"forr","action__pattern":"^snippet\\s\\+forr$","menu_abbr":""},"fpr":{"word":"fpr","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"fprintf(${1:stderr}, \"${2:%s}\\n\"${3});","user_data":"{\"snippet_trigger\":\"fpr\",\"snippet\":\"fprintf(${1:stderr}, \\\"${2:%s}\\\\n\\\"${3});\"}","description":"fprintf(${1:stderr}, \"${2:%s}\\n\"${3});","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":272,"menu_template":"","real_name":"fpr","action__pattern":"^snippet\\s\\+fpr$","menu_abbr":""},"todo":{"word":"todo","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"/*! TODO: ${1:Todo description here}\n\t *  \\todo $1\n\t */","user_data":"{\"snippet_trigger\":\"todo\",\"snippet\":\"/*! TODO: ${1:Todo description here}\\n\\t *  \\\\todo $1\\n\\t */\"}","description":"/*! TODO: ${1:Todo description here}\n\t *  \\todo $1\n\t */","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":339,"menu_template":"","real_name":"todo","action__pattern":"^snippet\\s\\+todo$","menu_abbr":""},"td":{"word":"td","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"typedef ${1:int} ${2:MyCustomType};","user_data":"{\"snippet_trigger\":\"td\",\"snippet\":\"typedef ${1:int} ${2:MyCustomType};\"}","description":"typedef ${1:int} ${2:MyCustomType};","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":228,"menu_template":"","real_name":"td","action__pattern":"^snippet\\s\\+td$","menu_abbr":""},"tde":{"word":"tde","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"/*! \\enum $2\n\t *\n\t *  ${4:Detailed description}\n\t */\n\ttypedef enum {\n\t\t${1:Data} /*!< ${3:Description} */\n\t} ${2:foo};","user_data":"{\"snippet_trigger\":\"tde\",\"snippet\":\"/*! \\\\enum $2\\n\\t *\\n\\t *  ${4:Detailed description}\\n\\t */\\n\\ttypedef enum {\\n\\t\\t${1:Data} /*!< ${3:Description} */\\n\\t} ${2:foo};\"}","description":"/*! \\enum $2\n\t *\n\t *  ${4:Detailed description}\n\t */\n\ttypedef enum {\n\t\t${1:Data} /*!< ${3:Description} */\n\t} ${2:foo};","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":258,"menu_template":"","real_name":"tde","action__pattern":"^snippet\\s\\+tde$","menu_abbr":""},".":{"word":".","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"[${1}]","user_data":"{\"snippet_trigger\":\".\",\"snippet\":\"[${1}]\"}","description":"[${1}]","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":345,"menu_template":"","real_name":".","action__pattern":"^snippet\\s\\+.$","menu_abbr":""},"tds":{"word":"tds","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"/*! \\struct $2\n\t *  \\brief ${5:Brief struct description}\n\t *\n\t *  ${6:Detailed description}\n\t */\n\ttypedef struct ${2:_$1 }{\n\t\tm_${3:Data} /*!< ${4:Description} */\n\t} ${1:`vim_snippets#Filename('$1_t', 'name')`};","user_data":"{\"snippet_trigger\":\"tds\",\"snippet\":\"/*! \\\\struct $2\\n\\t *  \\\\brief ${5:Brief struct description}\\n\\t *\\n\\t *  ${6:Detailed description}\\n\\t */\\n\\ttypedef struct ${2:_$1 }{\\n\\t\\tm_${3:Data} /*!< ${4:Description} */\\n\\t} ${1:`vim_snippets#Filename('$1_t', 'name')`};\"}","description":"/*! \\struct $2\n\t *  \\brief ${5:Brief struct description}\n\t *\n\t *  ${6:Detailed description}\n\t */\n\ttypedef struct ${2:_$1 }{\n\t\tm_${3:Data} /*!< ${4:Description} */\n\t} ${1:`vim_snippets#Filename('$1_t', 'name')`};","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":241,"menu_template":"","real_name":"tds","action__pattern":"^snippet\\s\\+tds$","menu_abbr":""},"el":{"word":"el","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"else {\n\t\t${0:${VISUAL}}\n\t}","user_data":"{\"snippet_trigger\":\"el\",\"snippet\":\"else {\\n\\t\\t${0:${VISUAL}}\\n\\t}\"}","description":"else {\n\t\t${0:${VISUAL}}\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":76,"menu_template":"","real_name":"el","action__pattern":"^snippet\\s\\+el$","menu_abbr":""},"prd":{"word":"prd","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"printf(\"${1:} = %d\\n\", $1);","user_data":"{\"snippet_trigger\":\"prd\",\"snippet\":\"printf(\\\"${1:} = %d\\\\n\\\", $1);\"}","description":"printf(\"${1:} = %d\\n\", $1);","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":274,"menu_template":"","real_name":"prd","action__pattern":"^snippet\\s\\+prd$","menu_abbr":""},"prf":{"word":"prf","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"printf(\"${1:} = %f\\n\", $1);","user_data":"{\"snippet_trigger\":\"prf\",\"snippet\":\"printf(\\\"${1:} = %f\\\\n\\\", $1);\"}","description":"printf(\"${1:} = %f\\n\", $1);","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":276,"menu_template":"","real_name":"prf","action__pattern":"^snippet\\s\\+prf$","menu_abbr":""},"fun0":{"word":"fun0","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"${1:void} ${2:function_name}()\n\t{\n\t\t${3}\n\t}","user_data":"{\"snippet_trigger\":\"fun0\",\"snippet\":\"${1:void} ${2:function_name}()\\n\\t{\\n\\t\\t${3}\\n\\t}\"}","description":"${1:void} ${2:function_name}()\n\t{\n\t\t${3}\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":145,"menu_template":"","real_name":"fun0","action__pattern":"^snippet\\s\\+fun0$","menu_abbr":""},"fun1":{"word":"fun1","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"${1:void} ${2:function_name}(${3:Type} ${4:Parameter})\n\t{\n\t\t${5}\n\t}","user_data":"{\"snippet_trigger\":\"fun1\",\"snippet\":\"${1:void} ${2:function_name}(${3:Type} ${4:Parameter})\\n\\t{\\n\\t\\t${5}\\n\\t}\"}","description":"${1:void} ${2:function_name}(${3:Type} ${4:Parameter})\n\t{\n\t\t${5}\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":163,"menu_template":"","real_name":"fun1","action__pattern":"^snippet\\s\\+fun1$","menu_abbr":""},"fun2":{"word":"fun2","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter})\n\t{\n\t\t${7}\n\t}","user_data":"{\"snippet_trigger\":\"fun2\",\"snippet\":\"${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter})\\n\\t{\\n\\t\\t${7}\\n\\t}\"}","description":"${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter})\n\t{\n\t\t${7}\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":182,"menu_template":"","real_name":"fun2","action__pattern":"^snippet\\s\\+fun2$","menu_abbr":""},"fun3":{"word":"fun3","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter}, ${7:Type} ${8:Parameter})\n\t{\n\t\t${9}\n\t}","user_data":"{\"snippet_trigger\":\"fun3\",\"snippet\":\"${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter}, ${7:Type} ${8:Parameter})\\n\\t{\\n\\t\\t${9}\\n\\t}\"}","description":"${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter}, ${7:Type} ${8:Parameter})\n\t{\n\t\t${9}\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":202,"menu_template":"","real_name":"fun3","action__pattern":"^snippet\\s\\+fun3$","menu_abbr":""},"wh":{"word":"wh","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"while (${1:/* condition */}) {\n\t\t${0:${VISUAL}}\n\t}","user_data":"{\"snippet_trigger\":\"wh\",\"snippet\":\"while (${1:/* condition */}) {\\n\\t\\t${0:${VISUAL}}\\n\\t}\"}","description":"while (${1:/* condition */}) {\n\t\t${0:${VISUAL}}\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":127,"menu_template":"","real_name":"wh","action__pattern":"^snippet\\s\\+wh$","menu_abbr":""},"nocxx":{"word":"nocxx","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"#ifdef __cplusplus\n\textern \"C\" {\n\t#endif\n\n\t${0}\n\n\t#ifdef __cplusplus\n\t} /* extern \"C\" */\n\t#endif","user_data":"{\"snippet_trigger\":\"nocxx\",\"snippet\":\"#ifdef __cplusplus\\n\\textern \\\"C\\\" {\\n\\t#endif\\n\\n\\t${0}\\n\\n\\t#ifdef __cplusplus\\n\\t} /* extern \\\"C\\\" */\\n\\t#endif\"}","description":"#ifdef __cplusplus\n\textern \"C\" {\n\t#endif\n\n\t${0}\n\n\t#ifdef __cplusplus\n\t} /* extern \"C\" */\n\t#endif","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":52,"menu_template":"","real_name":"nocxx","action__pattern":"^snippet\\s\\+nocxx$","menu_abbr":""},"prx":{"word":"prx","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"printf(\"${1:} = %${2}\\n\", $1);","user_data":"{\"snippet_trigger\":\"prx\",\"snippet\":\"printf(\\\"${1:} = %${2}\\\\n\\\", $1);\"}","description":"printf(\"${1:} = %${2}\\n\", $1);","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":278,"menu_template":"","real_name":"prx","action__pattern":"^snippet\\s\\+prx$","menu_abbr":""},"getopt":{"word":"getopt","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"int choice;\n\twhile (1)\n\t{\n\t\tstatic struct option long_options[] =\n\t\t{\n\t\t\t/* Use flags like so:\n\t\t\t{\"verbose\",\tno_argument,\t&verbose_flag, 'V'}*/\n\t\t\t/* Argument styles: no_argument, required_argument, optional_argument */\n\t\t\t{\"version\", no_argument,\t0,\t'v'},\n\t\t\t{\"help\",\tno_argument,\t0,\t'h'},\n\t\t\t${1}\n\t\t\t{0,0,0,0}\n\t\t};\n\n\t\tint option_index = 0;\n\n\t\t/* Argument parameters:\n\t\t\tno_argument: \" \"\n\t\t\trequired_argument: \":\"\n\t\t\toptional_argument: \"::\" */\n\n\t\tchoice = getopt_long( argc, argv, \"vh\",\n\t\t\t\t\tlong_options, &option_index);\n\n\t\tif (choice == -1)\n\t\t\tbreak;\n\n\t\tswitch( choice )\n\t\t{\n\t\t\tcase 'v':\n\t\t\t\t${2}\n\t\t\t\tbreak;\n\n\t\t\tcase 'h':\n\t\t\t\t${3}\n\t\t\t\tbreak;\n\n\t\t\tcase '?':\n\t\t\t\t/* getopt_long will have already printed an error */\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t/* Not sure how to get here... */\n\t\t\t\treturn EXIT_FAILURE;\n\t\t}\n\t}\n\n\t/* Deal with non-option arguments here */\n\tif ( optind < argc )\n\t{\n\t\twhile ( optind < argc )\n\t\t{\n\t\t\t${0}\n\t\t}\n\t}","user_data":"{\"snippet_trigger\":\"getopt\",\"snippet\":\"int choice;\\n\\twhile (1)\\n\\t{\\n\\t\\tstatic struct option long_options[] =\\n\\t\\t{\\n\\t\\t\\t/* Use flags like so:\\n\\t\\t\\t{\\\"verbose\\\",\\tno_argument,\\t&verbose_flag, 'V'}*/\\n\\t\\t\\t/* Argument styles: no_argument, required_argument, optional_argument */\\n\\t\\t\\t{\\\"version\\\", no_argument,\\t0,\\t'v'},\\n\\t\\t\\t{\\\"help\\\",\\tno_argument,\\t0,\\t'h'},\\n\\t\\t\\t${1}\\n\\t\\t\\t{0,0,0,0}\\n\\t\\t};\\n\\n\\t\\tint option_index = 0;\\n\\n\\t\\t/* Argument parameters:\\n\\t\\t\\tno_argument: \\\" \\\"\\n\\t\\t\\trequired_argument: \\\":\\\"\\n\\t\\t\\toptional_argument: \\\"::\\\" */\\n\\n\\t\\tchoice = getopt_long( argc, argv, \\\"vh\\\",\\n\\t\\t\\t\\t\\tlong_options, &option_index);\\n\\n\\t\\tif (choice == -1)\\n\\t\\t\\tbreak;\\n\\n\\t\\tswitch( choice )\\n\\t\\t{\\n\\t\\t\\tcase 'v':\\n\\t\\t\\t\\t${2}\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase 'h':\\n\\t\\t\\t\\t${3}\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase '?':\\n\\t\\t\\t\\t/* getopt_long will have already printed an error */\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tdefault:\\n\\t\\t\\t\\t/* Not sure how to get here... */\\n\\t\\t\\t\\treturn EXIT_FAILURE;\\n\\t\\t}\\n\\t}\\n\\n\\t/* Deal with non-option arguments here */\\n\\tif ( optind < argc )\\n\\t{\\n\\t\\twhile ( optind < argc )\\n\\t\\t{\\n\\t\\t\\t${0}\\n\\t\\t}\\n\\t}\"}","description":"int choice;\n\twhile (1)\n\t{\n\t\tstatic struct option long_options[] =\n\t\t{\n\t\t\t/* Use flags like so:\n\t\t\t{\"verbose\",\tno_argument,\t&verbose_flag, 'V'}*/\n\t\t\t/* Argument styles: no_argument, required_argument, optional_argument */\n\t\t\t{\"version\", no_argument,\t0,\t'v'},\n\t\t\t{\"help\",\tno_argument,\t0,\t'h'},\n\t\t\t${1}\n\t\t\t{0,0,0,0}\n\t\t};\n\n\t\tint option_index = 0;\n\n\t\t/* Argument parameters:\n\t\t\tno_argument: \" \"\n\t\t\trequired_argument: \":\"\n\t\t\toptional_argument: \"::\" */\n\n\t\tchoice = getopt_long( argc, argv, \"vh\",\n\t\t\t\t\tlong_options, &option_index);\n\n\t\tif (choice == -1)\n\t\t\tbreak;\n\n\t\tswitch( choice )\n\t\t{\n\t\t\tcase 'v':\n\t\t\t\t${2}\n\t\t\t\tbreak;\n\n\t\t\tcase 'h':\n\t\t\t\t${3}\n\t\t\t\tbreak;\n\n\t\t\tcase '?':\n\t\t\t\t/* getopt_long will have already printed an error */\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t/* Not sure how to get here... */\n\t\t\t\treturn EXIT_FAILURE;\n\t\t}\n\t}\n\n\t/* Deal with non-option arguments here */\n\tif ( optind < argc )\n\t{\n\t\twhile ( optind < argc )\n\t\t{\n\t\t\t${0}\n\t\t}\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":281,"menu_template":"","real_name":"getopt","action__pattern":"^snippet\\s\\+getopt$","menu_abbr":""},"ifdef":{"word":"ifdef","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"#ifdef ${1:FOO}\n\t\t${2:#define }\n\t#endif","user_data":"{\"snippet_trigger\":\"ifdef\",\"snippet\":\"#ifdef ${1:FOO}\\n\\t\\t${2:#define }\\n\\t#endif\"}","description":"#ifdef ${1:FOO}\n\t\t${2:#define }\n\t#endif","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":33,"menu_template":"","real_name":"ifdef","action__pattern":"^snippet\\s\\+ifdef$","menu_abbr":""},"t":{"word":"t","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"${1:/* condition */} ? ${2:a} : ${3:b}","user_data":"{\"snippet_trigger\":\"t\",\"snippet\":\"${1:/* condition */} ? ${2:a} : ${3:b}\"}","description":"${1:/* condition */} ? ${2:a} : ${3:b}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":89,"menu_template":"","real_name":"t","action__pattern":"^snippet\\s\\+t$","menu_abbr":""},"dfun0":{"word":"dfun0","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"/*! \\brief ${1:Brief function description here}\n\t *\n\t *  ${2:Detailed description of the function}\n\t *\n\t * \\return ${3:Return parameter description}\n\t */\n\t${4:void} ${5:function_name}()\n\t{\n\t\t${6}\n\t}","user_data":"{\"snippet_trigger\":\"dfun0\",\"snippet\":\"/*! \\\\brief ${1:Brief function description here}\\n\\t *\\n\\t *  ${2:Detailed description of the function}\\n\\t *\\n\\t * \\\\return ${3:Return parameter description}\\n\\t */\\n\\t${4:void} ${5:function_name}()\\n\\t{\\n\\t\\t${6}\\n\\t}\"}","description":"/*! \\brief ${1:Brief function description here}\n\t *\n\t *  ${2:Detailed description of the function}\n\t *\n\t * \\return ${3:Return parameter description}\n\t */\n\t${4:void} ${5:function_name}()\n\t{\n\t\t${6}\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":151,"menu_template":"","real_name":"dfun0","action__pattern":"^snippet\\s\\+dfun0$","menu_abbr":""},"dfun1":{"word":"dfun1","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"/*! \\brief ${1:Brief function description here}\n\t *\n\t *  ${2:Detailed description of the function}\n\t *\n\t * \\param $3 ${4:Parameter description}\n\t * \\return ${5:Return parameter description}\n\t */\n\t${6:void} ${7:function_name}(${8:Type} ${3:Parameter})\n\t{\n\t\t${9}\n\t}","user_data":"{\"snippet_trigger\":\"dfun1\",\"snippet\":\"/*! \\\\brief ${1:Brief function description here}\\n\\t *\\n\\t *  ${2:Detailed description of the function}\\n\\t *\\n\\t * \\\\param $3 ${4:Parameter description}\\n\\t * \\\\return ${5:Return parameter description}\\n\\t */\\n\\t${6:void} ${7:function_name}(${8:Type} ${3:Parameter})\\n\\t{\\n\\t\\t${9}\\n\\t}\"}","description":"/*! \\brief ${1:Brief function description here}\n\t *\n\t *  ${2:Detailed description of the function}\n\t *\n\t * \\param $3 ${4:Parameter description}\n\t * \\return ${5:Return parameter description}\n\t */\n\t${6:void} ${7:function_name}(${8:Type} ${3:Parameter})\n\t{\n\t\t${9}\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":169,"menu_template":"","real_name":"dfun1","action__pattern":"^snippet\\s\\+dfun1$","menu_abbr":""},"dfun2":{"word":"dfun2","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"/*! \\brief ${1:Brief function description here}\n\t *\n\t *  ${2:Detailed description of the function}\n\t *\n\t * \\param $3 ${4:Parameter description}\n\t * \\param $5 ${6:Parameter description}\n\t * \\return ${7:Return parameter description}\n\t */\n\t${8:void} ${9:function_name}(${10:Type} ${3:Parameter}, ${11:Type} ${5:Parameter})\n\t{\n\t\t${12}\n\t}","user_data":"{\"snippet_trigger\":\"dfun2\",\"snippet\":\"/*! \\\\brief ${1:Brief function description here}\\n\\t *\\n\\t *  ${2:Detailed description of the function}\\n\\t *\\n\\t * \\\\param $3 ${4:Parameter description}\\n\\t * \\\\param $5 ${6:Parameter description}\\n\\t * \\\\return ${7:Return parameter description}\\n\\t */\\n\\t${8:void} ${9:function_name}(${10:Type} ${3:Parameter}, ${11:Type} ${5:Parameter})\\n\\t{\\n\\t\\t${12}\\n\\t}\"}","description":"/*! \\brief ${1:Brief function description here}\n\t *\n\t *  ${2:Detailed description of the function}\n\t *\n\t * \\param $3 ${4:Parameter description}\n\t * \\param $5 ${6:Parameter description}\n\t * \\return ${7:Return parameter description}\n\t */\n\t${8:void} ${9:function_name}(${10:Type} ${3:Parameter}, ${11:Type} ${5:Parameter})\n\t{\n\t\t${12}\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":188,"menu_template":"","real_name":"dfun2","action__pattern":"^snippet\\s\\+dfun2$","menu_abbr":""},"dfun3":{"word":"dfun3","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"/*! \\brief ${1:Brief function description here}\n\t *\n\t *  ${2:Detailed description of the function}\n\t *\n\t * \\param $3 ${4:Parameter description}\n\t * \\param $5 ${6:Parameter description}\n\t * \\param $7 ${8:Parameter description}\n\t * \\return ${9:Return parameter description}\n\t */\n\t${10:void} ${11:function_name}(${12:Type} ${3:Parameter}, ${13:Type} ${5:Parameter}, ${14:Type} ${7:Parameter})\n\t{\n\t\t${15}\n\t}","user_data":"{\"snippet_trigger\":\"dfun3\",\"snippet\":\"/*! \\\\brief ${1:Brief function description here}\\n\\t *\\n\\t *  ${2:Detailed description of the function}\\n\\t *\\n\\t * \\\\param $3 ${4:Parameter description}\\n\\t * \\\\param $5 ${6:Parameter description}\\n\\t * \\\\param $7 ${8:Parameter description}\\n\\t * \\\\return ${9:Return parameter description}\\n\\t */\\n\\t${10:void} ${11:function_name}(${12:Type} ${3:Parameter}, ${13:Type} ${5:Parameter}, ${14:Type} ${7:Parameter})\\n\\t{\\n\\t\\t${15}\\n\\t}\"}","description":"/*! \\brief ${1:Brief function description here}\n\t *\n\t *  ${2:Detailed description of the function}\n\t *\n\t * \\param $3 ${4:Parameter description}\n\t * \\param $5 ${6:Parameter description}\n\t * \\param $7 ${8:Parameter description}\n\t * \\return ${9:Return parameter description}\n\t */\n\t${10:void} ${11:function_name}(${12:Type} ${3:Parameter}, ${13:Type} ${5:Parameter}, ${14:Type} ${7:Parameter})\n\t{\n\t\t${15}\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":208,"menu_template":"","real_name":"dfun3","action__pattern":"^snippet\\s\\+dfun3$","menu_abbr":""},"ndef":{"word":"ndef","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"#ifndef $1\n\t#define ${1:SYMBOL} ${2:value}\n\t#endif /* ifndef $1 */","user_data":"{\"snippet_trigger\":\"ndef\",\"snippet\":\"#ifndef $1\\n\\t#define ${1:SYMBOL} ${2:value}\\n\\t#endif /* ifndef $1 */\"}","description":"#ifndef $1\n\t#define ${1:SYMBOL} ${2:value}\n\t#endif /* ifndef $1 */","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":25,"menu_template":"","real_name":"ndef","action__pattern":"^snippet\\s\\+ndef$","menu_abbr":""},"#if":{"word":"#if","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"#if ${1:FOO}\n\t\t${0:${VISUAL}}\n\t#endif","user_data":"{\"snippet_trigger\":\"#if\",\"snippet\":\"#if ${1:FOO}\\n\\t\\t${0:${VISUAL}}\\n\\t#endif\"}","description":"#if ${1:FOO}\n\t\t${0:${VISUAL}}\n\t#endif","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":38,"menu_template":"","real_name":"#if","action__pattern":"^snippet\\s\\+#if$","menu_abbr":""},"fund":{"word":"fund","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"${1:void} ${2:function_name}(${3});","user_data":"{\"snippet_trigger\":\"fund\",\"snippet\":\"${1:void} ${2:function_name}(${3});\"}","description":"${1:void} ${2:function_name}(${3});","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":223,"menu_template":"","real_name":"fund","action__pattern":"^snippet\\s\\+fund$","menu_abbr":""},"mainn":{"word":"mainn","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"int main(void)\n\t{\n\t\t${0}\n\t\treturn 0;\n\t}","user_data":"{\"snippet_trigger\":\"mainn\",\"snippet\":\"int main(void)\\n\\t{\\n\\t\\t${0}\\n\\t\\treturn 0;\\n\\t}\"}","description":"int main(void)\n\t{\n\t\t${0}\n\t\treturn 0;\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":10,"menu_template":"","real_name":"mainn","action__pattern":"^snippet\\s\\+mainn$","menu_abbr":""},"enum":{"word":"enum","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"/*! \\enum $1\n\t *\n\t *  ${2:Detailed description}\n\t */\n\tenum ${1:name} { ${0} };","user_data":"{\"snippet_trigger\":\"enum\",\"snippet\":\"/*! \\\\enum $1\\n\\t *\\n\\t *  ${2:Detailed description}\\n\\t */\\n\\tenum ${1:name} { ${0} };\"}","description":"/*! \\enum $1\n\t *\n\t *  ${2:Detailed description}\n\t */\n\tenum ${1:name} { ${0} };","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":251,"menu_template":"","real_name":"enum","action__pattern":"^snippet\\s\\+enum$","menu_abbr":""},"pr":{"word":"pr","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"printf(\"${1:%s}\\n\"${2});","user_data":"{\"snippet_trigger\":\"pr\",\"snippet\":\"printf(\\\"${1:%s}\\\\n\\\"${2});\"}","description":"printf(\"${1:%s}\\n\"${2});","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":269,"menu_template":"","real_name":"pr","action__pattern":"^snippet\\s\\+pr$","menu_abbr":""},"ife":{"word":"ife","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"if (${1:true}) {\n\t\t${2:${VISUAL}}\n\t} else {\n\t\t${0}\n\t}","user_data":"{\"snippet_trigger\":\"ife\",\"snippet\":\"if (${1:true}) {\\n\\t\\t${2:${VISUAL}}\\n\\t} else {\\n\\t\\t${0}\\n\\t}\"}","description":"if (${1:true}) {\n\t\t${2:${VISUAL}}\n\t} else {\n\t\t${0}\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":69,"menu_template":"","real_name":"ife","action__pattern":"^snippet\\s\\+ife$","menu_abbr":""},"switch":{"word":"switch","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"switch (${1:/* variable */}) {\n\t\tcase ${2:/* variable case */}:\n\t\t\t${3}\n\t\t\t${4:break;}${5}\n\t\tdefault:\n\t\t\t${6}\n\t}","user_data":"{\"snippet_trigger\":\"switch\",\"snippet\":\"switch (${1:/* variable */}) {\\n\\t\\tcase ${2:/* variable case */}:\\n\\t\\t\\t${3}\\n\\t\\t\\t${4:break;}${5}\\n\\t\\tdefault:\\n\\t\\t\\t${6}\\n\\t}\"}","description":"switch (${1:/* variable */}) {\n\t\tcase ${2:/* variable case */}:\n\t\t\t${3}\n\t\t\t${4:break;}${5}\n\t\tdefault:\n\t\t\t${6}\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":92,"menu_template":"","real_name":"switch","action__pattern":"^snippet\\s\\+switch$","menu_abbr":""},"ifi":{"word":"ifi","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"if (${1:true}) ${0};","user_data":"{\"snippet_trigger\":\"ifi\",\"snippet\":\"if (${1:true}) ${0};\"}","description":"if (${1:true}) ${0};","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":86,"menu_template":"","real_name":"ifi","action__pattern":"^snippet\\s\\+ifi$","menu_abbr":""},"Inc":{"word":"Inc","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"#include \"${1:`vim_snippets#Filename(\"$1.h\")`}\"","user_data":"{\"snippet_trigger\":\"Inc\",\"snippet\":\"#include \\\"${1:`vim_snippets#Filename(\\\"$1.h\\\")`}\\\"\"}","description":"#include \"${1:`vim_snippets#Filename(\"$1.h\")`}\"","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":22,"menu_template":"","real_name":"Inc","action__pattern":"^snippet\\s\\+Inc$","menu_abbr":""},"for":{"word":"for","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\n\t\t${4}\n\t}","user_data":"{\"snippet_trigger\":\"for\",\"snippet\":\"for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\\n\\t\\t${4}\\n\\t}\"}","description":"for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\n\t\t${4}\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":117,"menu_template":"","real_name":"for","action__pattern":"^snippet\\s\\+for$","menu_abbr":""},"case":{"word":"case","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"case ${1:/* variable case */}:\n\t\t${2}\n\t\t${3:break;}","user_data":"{\"snippet_trigger\":\"case\",\"snippet\":\"case ${1:/* variable case */}:\\n\\t\\t${2}\\n\\t\\t${3:break;}\"}","description":"case ${1:/* variable case */}:\n\t\t${2}\n\t\t${3:break;}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":108,"menu_template":"","real_name":"case","action__pattern":"^snippet\\s\\+case$","menu_abbr":""},"switchndef":{"word":"switchndef","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"switch (${1:/* variable */}) {\n\t\tcase ${2:/* variable case */}:\n\t\t\t${3}\n\t\t\t${4:break;}${5}\n\t}","user_data":"{\"snippet_trigger\":\"switchndef\",\"snippet\":\"switch (${1:/* variable */}) {\\n\\t\\tcase ${2:/* variable case */}:\\n\\t\\t\\t${3}\\n\\t\\t\\t${4:break;}${5}\\n\\t}\"}","description":"switch (${1:/* variable */}) {\n\t\tcase ${2:/* variable case */}:\n\t\t\t${3}\n\t\t\t${4:break;}${5}\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":101,"menu_template":"","real_name":"switchndef","action__pattern":"^snippet\\s\\+switchndef$","menu_abbr":""},"once":{"word":"once","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"#ifndef ${1:`toupper(vim_snippets#Filename('$1_H', 'UNTITLED_H'))`}\n\n\t#define $1\n\n\t${0}\n\n\t#endif /* end of include guard: $1 */","user_data":"{\"snippet_trigger\":\"once\",\"snippet\":\"#ifndef ${1:`toupper(vim_snippets#Filename('$1_H', 'UNTITLED_H'))`}\\n\\n\\t#define $1\\n\\n\\t${0}\\n\\n\\t#endif /* end of include guard: $1 */\"}","description":"#ifndef ${1:`toupper(vim_snippets#Filename('$1_H', 'UNTITLED_H'))`}\n\n\t#define $1\n\n\t${0}\n\n\t#endif /* end of include guard: $1 */","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":43,"menu_template":"","real_name":"once","action__pattern":"^snippet\\s\\+once$","menu_abbr":""},"inc":{"word":"inc","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"#include <${1:stdio}.h>","user_data":"{\"snippet_trigger\":\"inc\",\"snippet\":\"#include <${1:stdio}.h>\"}","description":"#include <${1:stdio}.h>","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":19,"menu_template":"","real_name":"inc","action__pattern":"^snippet\\s\\+inc$","menu_abbr":""},"if":{"word":"if","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"if (${1:true}) {\n\t\t${0:${VISUAL}}\n\t}","user_data":"{\"snippet_trigger\":\"if\",\"snippet\":\"if (${1:true}) {\\n\\t\\t${0:${VISUAL}}\\n\\t}\"}","description":"if (${1:true}) {\n\t\t${0:${VISUAL}}\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":65,"menu_template":"","real_name":"if","action__pattern":"^snippet\\s\\+if$","menu_abbr":""},"elif":{"word":"elif","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"else if (${1:true}) {\n\t\t${0:${VISUAL}}\n\t}","user_data":"{\"snippet_trigger\":\"elif\",\"snippet\":\"else if (${1:true}) {\\n\\t\\t${0:${VISUAL}}\\n\\t}\"}","description":"else if (${1:true}) {\n\t\t${0:${VISUAL}}\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":81,"menu_template":"","real_name":"elif","action__pattern":"^snippet\\s\\+elif$","menu_abbr":""},"do":{"word":"do","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"do {\n\t\t${0:${VISUAL}}\n\t} while (${1:/* condition */});","user_data":"{\"snippet_trigger\":\"do\",\"snippet\":\"do {\\n\\t\\t${0:${VISUAL}}\\n\\t} while (${1:/* condition */});\"}","description":"do {\n\t\t${0:${VISUAL}}\n\t} while (${1:/* condition */});","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":132,"menu_template":"","real_name":"do","action__pattern":"^snippet\\s\\+do$","menu_abbr":""},"main":{"word":"main","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"int main(int argc, const char *argv[])\n\t{\n\t\t${0}\n\t\treturn 0;\n\t}","user_data":"{\"snippet_trigger\":\"main\",\"snippet\":\"int main(int argc, const char *argv[])\\n\\t{\\n\\t\\t${0}\\n\\t\\treturn 0;\\n\\t}\"}","description":"int main(int argc, const char *argv[])\n\t{\n\t\t${0}\n\t\treturn 0;\n\t}","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":3,"menu_template":"","real_name":"main","action__pattern":"^snippet\\s\\+main$","menu_abbr":""},"ret":{"word":"ret","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"return ${0};","user_data":"{\"snippet_trigger\":\"ret\",\"snippet\":\"return ${0};\"}","description":"return ${0};","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":112,"menu_template":"","real_name":"ret","action__pattern":"^snippet\\s\\+ret$","menu_abbr":""},"st":{"word":"st","options":{"word":0,"oneshot":0,"indent":0,"head":0},"snip":"/*! \\struct $1\n\t *  \\brief ${3:Brief struct description}\n\t *\n\t *  ${4:Detailed description}\n\t */\n\tstruct ${1:`vim_snippets#Filename('$1_t', 'name')`} {\n\t\t${2:Data} /*!< ${4:Description} */\n\t}${5: /* optional variable list */};","user_data":"{\"snippet_trigger\":\"st\",\"snippet\":\"/*! \\\\struct $1\\n\\t *  \\\\brief ${3:Brief struct description}\\n\\t *\\n\\t *  ${4:Detailed description}\\n\\t */\\n\\tstruct ${1:`vim_snippets#Filename('$1_t', 'name')`} {\\n\\t\\t${2:Data} /*!< ${4:Description} */\\n\\t}${5: /* optional variable list */};\"}","description":"/*! \\struct $1\n\t *  \\brief ${3:Brief struct description}\n\t *\n\t *  ${4:Detailed description}\n\t */\n\tstruct ${1:`vim_snippets#Filename('$1_t', 'name')`} {\n\t\t${2:Data} /*!< ${4:Description} */\n\t}${5: /* optional variable list */};","action__path":"C:\\Users\\dh\\.cache\\vimfiles\\repos\\github.com\\honza\\vim-snippets\\snippets\\c.snippets","action__line":231,"menu_template":"","real_name":"st","action__pattern":"^snippet\\s\\+st$","menu_abbr":""}}
